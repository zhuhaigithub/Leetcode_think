First missing positive

使用桶排序思想

首先前提是知道:对于长度为n的数组,它的第一个缺失的正整数的最大值为n+1
算法步骤:
1.长度为n的数组，我们认为它的"区间"是1-n
2.索引为i的位置上应放数字i+1
3.按照1,2排好序后，第一个不"正确"的索引+1即为答案，如果都"正确",则答案为数组长度+1

#include <iostream>
#include <vector>

using namespace std;
class Solution
{
public:
	int Fistmissingpositive(vector<int> &nums)
	{
		for(int i=0;i<nums.size();i++)
		{
			while(nums[i]!=i+1)
			{
                //对于<=0的数或者超过数组长度的数不动
				if(nums[i]<=0||nums[i]>nums.size()||nums[i]==nums[nums[i]-1])
				{
					break;
				}
                //交换索引为i和nums[i]-1
				int id=nums[i]-1;
				nums[i]=nums[id];
				nums[id]=id+1;
			}
		}
		for(int i=0;i<nums.size();i++)
		{
			if(nums[i]!=i+1)//第一个不正确的返回
			{
				return i+1;
			}
		}
		return nums.size()+1;
	}
};

int main()
{
	vector<int> v={3,4,-1,1};
	Solution a;
	int result=a.Fistmissingpositive(v);
	cout <<result<<endl;
}
